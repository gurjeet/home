

#Contents of ~/.gitconfig

[user]
    name = Gurjeet Singh
    # To force user to add user.email per repository, comment or remove the following line
    email = gurjeet@singh.im

	# Tell Git to _not_ guess my name and email based on `whoami` and `hostname`
	# Force user to add user.email per repository
	useConfigOnly = true

[core]
    # Set the command line options to be used by 'less'
    #	F = Quit if one screen
    #	R = Use Raw Control Characters; useful for color output
    #	i = ignore case when searching, iff search pattern doesn't have uppercase letters
    #	X = disable termcap initialization and deinitialization;
    #			not using this causes screen to be cleared when using F option above
    #	x1,5 = Use tab size of 4 (=5-1)columns, but start at column 1;
    #       	becuase of the +/- indicators used by unified diff.
    pager = less -FRiXx1,5

[color]
	ui = auto

[alias]
	#See status of current repository
    st   = status
    stu  = status --untracked-files=normal
    stui = status --untracked-file=normal --ignored

    d     = diff
    dc    = diff --cached
    dw    = diff --color-words
    dwc   = diff --color-words --cached
    dt    = difftool --tool difftastic
    idiff = difftool --tool idiff 

	# Check-in the code; commit the index contents.
    ci = commit -v

	# Check-in the code; first add modified files to index, and then commit the
	# index contents.
    cia = commit -v -a

	# Usage:
	#  git forkdiff <forked from branch> <forked branch> [git-diff-options]
	#
	# Example:
	#    git forkdiff origin/master my_forked_branch --stat
	#
	# It uses git-merge-base to determine the fork-point (the commit that is
	# common to both the branches) and does a git-diff between that commit and
	# the second branch.
	forkdiff = !bash -c 'git diff $(git merge-base "$1" "$2") "$2" "${@: 3}" ' -

	#Check-out
    co = checkout
    cp = cherry-pick

    l   = log
    ll  = log -p
    lt  = log trunk..
    llt = log -p trunk..
    lm  = log master..
    llm = log -p master..

    b = branch

    f  = fetch
    fa = fetch --all

    # Push all branches to all remotes.
    # keep the old implementation as a comment, just in case.
    #pa = !sh -c 'for R in $(git remote)\; do for B in $(git branch --format="%(refname:short)")\; do git push $R $B\; done\; done'
    pa = "!for R in $(git remote); do git push $R --all; done;"

	#Launch gitk in background; shows commits leading up to current commit
    k = !sh -c 'gitk $@ &' -

	#Launch gitk in background; shows _all_ commits in the repository.
    ka = !sh -c 'gitk --all $@ &' -

    dag-options = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%ar%C(reset)%C(auto)%d%C(reset)%n%s' --date-order

	# Show a DAG of the repo; can take additional parameter. Use additional `--all` param to show all branches and tags.
    dag     = dag-options
    dag-all = dag --all

	# Show a summary of the DAG of the repo; shows only those commits that have a tag or a bannch label.
	dag-summary     = dag --simplify-by-decoration
	dag-summary-all = dag-summary --all

#Make Git use an external pager for git-status output
[pager]
	status = true

# Do not show untracked files when doing git-status
[status]
	showuntrackedfiles = no

[branch]
	autosetuprebase = always
[difftool "idiff"]
    cmd = diff --unified=3 --color=always --ignore-case $LOCAL $REMOTE | less --raw-control-chars
[difftool "difftastic"]
    cmd = difft --color always $LOCAL $REMOTE | less --raw-control-chars
[difftool]
	prompt = 0
[diff]
	tool = vimdiff
	algorithm = histogram
[color "diff"]
	whitespace = red reverse
[merge]
	log = true

[init]
    defaultBranch = master

[diff "odf"]
        binary = true
        textconv = odt2txt
