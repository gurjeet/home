
# inpute: logfilename address
define gen_script_dumppgblock
	set logging overwrite on
	set logging redirect on
	set logging file /tmp/gurjeet_tmp_gdb_commands.txt
	set logging on
	printf "#This file is automatically generated by gen_script_dumppgblock\n"
	printf "set logging overwrite on\n"
	#printf "print 2001\n"
	printf "set logging redirect on\n"
	printf "set logging file %s\n", $arg0
	printf "set logging on\n"
	printf "x /8192xb %s\n", $arg1
	printf "set logging overwrite off\n"
	printf "set logging off\n"
	set logging overwrite off
	set logging off
end

# inputs: address fileprefix spc db rel fork blk lsn
define dumppgblock
	set $log_fname = $pyconcat($arg1, $arg2, $arg3, $arg4, $arg5, $arg6, $arg7, "log")
	#print $log_fname
	printf "gdb generating file %s\n", $log_fname
	gen_script_dumppgblock $log_fname $arg0
	source /tmp/gurjeet_tmp_gdb_commands.txt
end

define dump_pwin
	dumppgblock "pageData" "pw.in" buf->tag.rnode.spcNode buf->tag.rnode.dbNode buf->tag.rnode.relNode buf->tag.forkNum buf->tag.blockNum lsn.val
end

python
class Concat (gdb.Function):

  def __init__ (self):
    super (Concat, self).__init__ ("pyconcat")

  def invoke (self, *args):
    return ("%s" % '.'.join([str(x) for x in args])).replace('"', '')
#    return "{0}{1}".format(a1, a2)
#    return ("%s%s" % (str(a1), str(a2))).replace('"', '')

Concat ()
end

define strcat_does_not_work
	set $tmp_fname = "/tmp/gurjeet_tmp_gdb_commands.txt"
	set logging overwrite on
	set logging redirect on
	set logging file /tmp/gurjeet_tmp_gdb_commands.txt
	set logging on
	printf "#This file is automatically generated by strcat\n"
	printf "set logging overwrite on\n"
	printf "set logging redirect on\n"
	printf "set logging file %s\n", $tmp_fname
	printf "set logging on\n"
	printf "set %s = \"%s%s\"", $arg0, $arg1, $arg2
	printf "set logging overwrite off\n"
	printf "set logging off\n"
	set logging overwrite off
	set logging off
	print "sourcing tmp file"
	source /tmp/gurjeet_tmp_gdb_commands.txt
end

define strcat_py_does_not_work
	set $strcat_res = 10
	python  a1 = gdb.parse_and_eval("$strcat_a1"); a2 = gdb.parse_and_eval("$strcat_a2"); gdb.execute("set $strcat_res = " + str(a1) + str(a2))
end

define strcat_py2_does_not_work
	set $strcat_res = 10
	set $strcat_res = "AAA"
	set $strcat_arg1 = "$arg0"
	set $strcat_arg2 = "$arg1"
	python  a1 = gdb.parse_and_eval("$strcat_arg1"); a2 = gdb.parse_and_eval("$strcat_arg2"); gdb.execute("set $strcat_res = 11"); gdb.execute("set $strcat_res = " + str(a1) + str(a2))
end


